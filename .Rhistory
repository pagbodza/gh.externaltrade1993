usethis::use_mit_license()
usethis::use_mit_license()
usethis::use_data_raw()
gh_comodity1993
gh_comodity1993 <- readxl::read_excel(
"C:/Users/nyuie/Documents/zz_data/ghana commodities 1993.xlsx")|>
select(-1)|>mutate_at(6, parse_number)
write.csv(gh_comodity1993,
"C:/Users/nyuie/Documents/zz_data/gh.externaltrade1993.csv",
row.names = FALSE)
gh.externaltrade1993
gh.externaltrade1993 <- readr::read_csv(
"C:/Users/nyuie/Documents/zz_data/gh.externaltrade1993.csv")
gh.externaltrade1993
gh_comodity1993 <- readxl::read_excel(
"C:/Users/nyuie/Documents/zz_data/ghana commodities 1993.xlsx")|>
select(-1)|>mutate_at(6, parse_number)|>janitor::clean_names()
write.csv(gh_comodity1993,
"C:/Users/nyuie/Documents/zz_data/gh.externaltrade1993.csv",
row.names = FALSE)
gh.externaltrade1993 <- readr::read_csv(
"C:/Users/nyuie/Documents/zz_data/gh.externaltrade1993.csv")
file.copy(gh.externaltrade1993,
to = "C:/Users/nyuie/Documents/zz_data/gh.externaltrade1993/data-raw",
recursive = TRUE,
overwrite = TRUE, copy.mode = TRUE, copy.date = FALSE)
here::here()
file.copy(gh.externaltrade1993,
to = "C:/Users/nyuie/Documents/gh.externaltrade1993/data-raw",
recursive = TRUE,
overwrite = TRUE, copy.mode = TRUE, copy.date = FALSE)
file.copy(gh.externaltrade1993,
to = "C:/Users/nyuie/Documents/gh.externaltrade1993/data-raw/",
recursive = TRUE,
overwrite = TRUE, copy.mode = TRUE, copy.date = FALSE)
file.copy("C:/Users/nyuie/Documents/zz_data/gh.externaltrade1993.csv",
to = "C:/Users/nyuie/Documents/gh.externaltrade1993/data-raw/",
recursive = TRUE,
overwrite = TRUE, copy.mode = TRUE, copy.date = FALSE)
source("~/gh.externaltrade1993/data-raw/DATASET.R", echo=TRUE)
setwd("C:/Users/nyuie/Documents/gh.externaltrade1993/data-raw")
getwd()
source("~/gh.externaltrade1993/data-raw/DATASET.R", echo=TRUE)
usethis::use_data(gh.externaltrade1993)
locale()
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
locale()
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
locale()
ls()
locale()
vignette("rd-other")
#'
#' @format A tibble with 6268 rows and 6 variables:
#' \describe{
#'   \item{partner}{chr denotes trading partner countries or origin of goods}
#'   \item{description}{dbl denotes the item being imported}
#'   \item{cif_value_cedi}{dbl denoting Cost-Insurance-Freight value of goods to importer}
#'   \item{net_weight_kg}{dbl denoting net weight of goods exclusive of packings and wrappings}
#'   \item{net_weight_cedi_kg}{dbl denoting relative value of goods in cedi per weight}
#'   \item{share_percent}{dbl denoting the ratio of CIF value to grand total CIF  value of all imports in percent}
#' }
"gh.externaltrade1993"
usethis::use_package_doc()
vignette("rd")
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
gh_comodity1993 <- readxl::read_excel(
"C:/Users/nyuie/Documents/zz_data/ghana commodities 1993.xlsx")|>
select(-1)|>mutate_at(6, parse_number)|>janitor::clean_names()
gh_comodity1993
gh_comodity1993 <- readxl::read_excel(
"C:/Users/nyuie/Documents/zz_data/ghana commodities 1993.xlsx")|>
select(-1)|>mutate_at(6, parse_number)|>janitor::clean_names()
gh_comodity1993 <- readxl::read_excel(
"C:/Users/nyuie/Documents/zz_data/ghana commodities 1993.xlsx")|>
select(-1)|>mutate_at(6, parse_number)|>janitor::clean_names()
gh_comodity1993
write.csv(gh_comodity1993,
"C:/Users/nyuie/Documents/zz_data/gh.externaltrade1993.csv",
row.names = FALSE)
gh.externaltrade1993 <- readr::read_csv(
"C:/Users/nyuie/Documents/zz_data/gh.externaltrade1993.csv")
gh.externaltrade1993
file.copy("C:/Users/nyuie/Documents/zz_data/gh.externaltrade1993.csv",
to = "C:/Users/nyuie/Documents/gh.externaltrade1993/data-raw/",
recursive = TRUE,
overwrite = TRUE, copy.mode = TRUE, copy.date = FALSE)
gh.externaltrade1993 <- readr::read_csv("gh.externaltrade1993.csv")
getwd()
setwd("C:/Users/nyuie/Documents/gh.externaltrade1993/data-raw")
getwd()
gh.externaltrade1993 <- readr::read_csv("gh.externaltrade1993.csv")
usethis::use_data(gh.externaltrade1993)
usethis::use_data(gh.externaltrade1993, overwrite = TRUE)
usethis::use_testthat()
use_test()
usethis::use_test()
